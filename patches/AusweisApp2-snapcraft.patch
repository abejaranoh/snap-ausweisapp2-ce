diff -upNr AusweisApp2-1.16.1/cmake/DefaultFiles.cmake AusweisApp2-1.16.1.patched/cmake/DefaultFiles.cmake
--- AusweisApp2-1.16.1/cmake/DefaultFiles.cmake	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/cmake/DefaultFiles.cmake	2019-04-16 15:40:25.168717354 +0200
@@ -23,5 +23,7 @@ FUNCTION(CONFIGURE_DEFAULT_FILES _destin
 	CONFIGURE_FILE(${RESOURCES_DIR}/config.json.in ${_destination}/config.json @ONLY)
 
 	# Copy qtlogging.ini file
-	CONFIGURE_FILE(${RESOURCES_DIR}/qtlogging.ini ${_destination}/qtlogging.ini COPYONLY)
+	IF(NOT ${CMAKE_BUILD_TYPE} STREQUAL "RELEASE")
+		CONFIGURE_FILE(${RESOURCES_DIR}/qtlogging.ini ${_destination}/qtlogging.ini COPYONLY)
+	ENDIF()
 ENDFUNCTION()
diff -upNr AusweisApp2-1.16.1/cmake/Install.cmake AusweisApp2-1.16.1.patched/cmake/Install.cmake
--- AusweisApp2-1.16.1/cmake/Install.cmake	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/cmake/Install.cmake	2019-04-16 15:40:25.168717354 +0200
@@ -3,7 +3,7 @@
 # It will be included by ./src/CMakeLists.txt
 ################################################
 
-SET(TRANSLATION_DESTINATION translations)
+SET(TRANSLATION_DESTINATION share/qt5/translations)
 SET(DEFAULT_FILE_DESTINATION .)
 
 IF(CMAKE_PREFIX_PATH)
@@ -264,7 +264,7 @@ ELSEIF(UNIX)
 
 	CONFIGURE_FILE(${PACKAGING_DIR}/linux/AusweisApp2.desktop.in ${CMAKE_CURRENT_BINARY_DIR}/AusweisApp2.desktop @ONLY)
 	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/AusweisApp2.desktop DESTINATION share/applications COMPONENT Application)
-	#INSTALL(FILES ${RESOURCES_DIR}/images/AusweisApp2.svg DESTINATION share/icons/hicolor/scalable/apps COMPONENT Application)
+	INSTALL(FILES ${RESOURCES_DIR}/images/npa.svg DESTINATION share/icons/hicolor/scalable/apps COMPONENT Application)
 ENDIF()
 
 
@@ -306,12 +306,16 @@ ELSEIF(NOT ANDROID_BUILD_AAR)
 	INSTALL(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/translations/ DESTINATION ${TRANSLATION_DESTINATION} COMPONENT Translations)
 ENDIF()
 
-IF(NOT ANDROID_BUILD_AAR)
+IF(NOT ANDROID_BUILD_AAR AND NOT LINUX)
 	# resources file
 	INSTALL(FILES ${RCC} DESTINATION ${DEFAULT_FILE_DESTINATION} COMPONENT Runtime)
 ENDIF()
 
-IF(NOT ANDROID AND NOT IOS)
+IF (LINUX)
+	INSTALL(FILES ${RCC} DESTINATION share/AusweisApp2 COMPONENT Runtime)
+ENDIF()
+
+IF(NOT ANDROID AND NOT IOS AND NOT ${CMAKE_BUILD_TYPE} STREQUAL "RELEASE")
 	# qtlogging.ini
 	INSTALL(FILES ${RESOURCES_DIR}/qtlogging.ini DESTINATION ${DEFAULT_FILE_DESTINATION} COMPONENT Runtime)
 ENDIF()
@@ -324,4 +328,8 @@ IF(DESKTOP AND TARGET Qt5::Qml)
 ENDIF()
 
 # secure storage file
-INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/config.json DESTINATION ${DEFAULT_FILE_DESTINATION} COMPONENT Runtime)
+IF (LINUX)
+	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/config.json DESTINATION share/AusweisApp2 COMPONENT Runtime)
+ELSE()
+	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/config.json DESTINATION ${DEFAULT_FILE_DESTINATION} COMPONENT Runtime)	
+ENDIF()
diff -upNr AusweisApp2-1.16.1/CMakeLists.txt AusweisApp2-1.16.1.patched/CMakeLists.txt
--- AusweisApp2-1.16.1/CMakeLists.txt	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/CMakeLists.txt	2019-04-16 15:40:25.168717354 +0200
@@ -100,6 +100,13 @@ ELSE()
 	SET(CMAKE_BUILD_TYPE "DEBUG" CACHE STRING "build type configuration" FORCE)
 ENDIF()
 
+
+IF(${CMAKE_BUILD_TYPE} STREQUAL "RELEASE")
+	ADD_DEFINITIONS(-DQT_NO_DEBUG)
+	ADD_DEFINITIONS(-DQT_NO_DEBUG_OUTPUT)
+	ADD_DEFINITIONS(-DQT_NO_WARNING_OUTPUT)
+ENDIF()
+
 IF(DESKTOP)
 	SET(CMAKE_AUTOUIC ON)
 ENDIF()
diff -upNr AusweisApp2-1.16.1/resources/packaging/linux/AusweisApp2.desktop.in AusweisApp2-1.16.1.patched/resources/packaging/linux/AusweisApp2.desktop.in
--- AusweisApp2-1.16.1/resources/packaging/linux/AusweisApp2.desktop.in	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/resources/packaging/linux/AusweisApp2.desktop.in	2019-04-16 15:40:25.168717354 +0200
@@ -2,7 +2,7 @@
 Version=1.0
 Type=Application
 Exec=@CMAKE_INSTALL_PREFIX@/bin/AusweisApp2
-Icon=AusweisApp2
+Icon=npa
 StartupNotify=true
 Terminal=false
 Categories=Utility;Accessibility;
diff -upNr AusweisApp2-1.16.1/src/card/base/command/BaseCardCommand.cpp AusweisApp2-1.16.1.patched/src/card/base/command/BaseCardCommand.cpp
--- AusweisApp2-1.16.1/src/card/base/command/BaseCardCommand.cpp	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/card/base/command/BaseCardCommand.cpp	2019-04-16 15:40:25.168717354 +0200
@@ -45,7 +45,9 @@ void BaseCardCommand::execute()
 	Q_ASSERT(QObject::thread() == QThread::currentThread());
 
 	internalExecute();
-	qDebug(card) << metaObject()->className() << "| ReturnCode of internal execute:" << mReturnCode;
+	#ifndef QT_NO_DEBUG_OUTPUT
+		qDebug(card) << metaObject()->className() << "| ReturnCode of internal execute:" << mReturnCode;
+	#endif // QT_NO_DEBUG_OUTPUT
 
 	// A "Command" is created by CardConnection::call() in Main-Thread and moved to ReaderManager-Thread.
 	// The internal execution of a command will be self-sufficient until it has finished. After the
diff -upNr AusweisApp2-1.16.1/src/core/states/StateUpdateRetryCounter.cpp AusweisApp2-1.16.1.patched/src/core/states/StateUpdateRetryCounter.cpp
--- AusweisApp2-1.16.1/src/core/states/StateUpdateRetryCounter.cpp	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/core/states/StateUpdateRetryCounter.cpp	2019-04-16 15:40:25.168717354 +0200
@@ -24,7 +24,9 @@ void StateUpdateRetryCounter::run()
 	auto cardConnection = getContext()->getCardConnection();
 	if (!cardConnection)
 	{
-		qCDebug(statemachine) << "No card connection available.";
+		#ifndef QT_NO_DEBUG_OUTPUT
+			qCDebug(statemachine) << "No card connection available.";
+		#endif // QT_NO_DEBUG_OUTPUT
 		Q_EMIT fireAbort();
 		return;
 	}
@@ -36,10 +38,13 @@ void StateUpdateRetryCounter::run()
 
 void StateUpdateRetryCounter::onUpdateRetryCounterDone(QSharedPointer<BaseCardCommand> pCommand)
 {
-	qDebug(statemachine) << "StateUpdateRetryCounter::onUpdateRetryCounterDone()";
+	#ifndef QT_NO_DEBUG_OUTPUT
+		qDebug(statemachine) << "StateUpdateRetryCounter::onUpdateRetryCounterDone()";
+	#endif // QT_NO_DEBUG_OUTPUT
 
 	if (pCommand->getReturnCode() != CardReturnCode::OK)
 	{
+
 		qCritical(statemachine) << "An error occurred while communicating with the card reader, cannot determine retry counter, abort state";
 		getContext()->resetCardConnection();
 		Q_EMIT fireAbort();
diff -upNr AusweisApp2-1.16.1/src/global/FileDestination.h AusweisApp2-1.16.1.patched/src/global/FileDestination.h
--- AusweisApp2-1.16.1/src/global/FileDestination.h	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/global/FileDestination.h	2019-04-16 15:40:25.168717354 +0200
@@ -47,6 +47,23 @@ class FileDestination
 		}
 
 
+		static QString getPrefixPath()
+		{
+			QString prefixPath;
+
+			const auto libPathes = QCoreApplication::libraryPaths();
+			for (const auto& path : libPathes)
+			{
+				prefixPath = path;
+				prefixPath.remove(QStringLiteral("/bin"));
+
+				if (prefixPath != path) {
+					break;
+				}
+			}
+
+			return prefixPath;
+		}
 };
 
 } // namespace governikus
diff -upNr AusweisApp2-1.16.1/src/global/LanguageLoader.cpp AusweisApp2-1.16.1.patched/src/global/LanguageLoader.cpp
--- AusweisApp2-1.16.1/src/global/LanguageLoader.cpp	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/global/LanguageLoader.cpp	2019-04-16 15:40:25.168717354 +0200
@@ -23,7 +23,7 @@ const QLocale::Language LanguageLoader::
 QLocale LanguageLoader::mDefaultLanguage = QLocale::system();
 
 LanguageLoader::LanguageLoader()
-	: mPath(FileDestination::getPath(QStringLiteral("translations")))
+	: mPath(QStringLiteral("share/qt5/translations"))
 	, mTranslatorList()
 	, mComponentList(
 		{
@@ -31,6 +31,7 @@ LanguageLoader::LanguageLoader()
 		})
 	, mUsedLocale(mFallbackLanguage)
 {
+	mPath = FileDestination::getPrefixPath() + QStringLiteral("/") + mPath;
 }
 
 
diff -upNr AusweisApp2-1.16.1/src/global/ResourceLoader.cpp AusweisApp2-1.16.1.patched/src/global/ResourceLoader.cpp
--- AusweisApp2-1.16.1/src/global/ResourceLoader.cpp	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/global/ResourceLoader.cpp	2019-04-16 15:40:25.168717354 +0200
@@ -42,7 +42,7 @@ void ResourceLoader::init()
 {
 	for (const auto& file : mFilenames)
 	{
-		QString path = FileDestination::getPath(file);
+		QString path = FileDestination::getPrefixPath() + QStringLiteral("/share/AusweisApp2/") + file;
 
 #ifndef QT_NO_DEBUG
 		const auto& filePathFromTestDir = QCoreApplication::applicationDirPath() + QStringLiteral("/../../src/") + file;
diff -upNr AusweisApp2-1.16.1/src/secure_storage/SecureStorage.cpp AusweisApp2-1.16.1.patched/src/secure_storage/SecureStorage.cpp
--- AusweisApp2-1.16.1/src/secure_storage/SecureStorage.cpp	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/secure_storage/SecureStorage.cpp	2019-04-16 15:40:25.168717354 +0200
@@ -95,7 +95,8 @@ SecureStorage& SecureStorage::getInstanc
 
 void SecureStorage::load()
 {
-	const auto& path = FileDestination::getPath(QStringLiteral("config.json"));
+	QString prefixPath = FileDestination::getPrefixPath();
+	const auto& path = prefixPath + QStringLiteral("/share/AusweisApp2/config.json");
 
 	if (!QFile::exists(path))
 	{
diff -upNr AusweisApp2-1.16.1/src/ui/aidl/UIPlugInAidl.cpp AusweisApp2-1.16.1.patched/src/ui/aidl/UIPlugInAidl.cpp
--- AusweisApp2-1.16.1/src/ui/aidl/UIPlugInAidl.cpp	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/ui/aidl/UIPlugInAidl.cpp	2019-04-16 15:40:25.168717354 +0200
@@ -46,10 +46,12 @@ UIPlugInAidl::UIPlugInAidl()
 		mJsonApi->setEnabled();
 		mInitializationSuccessfull = true;
 	}
+	#ifndef QT_NO_WARNING_OUTPUT
 	else
 	{
 		qWarning(aidl) << "Cannot start AIDL because JSON-API is missing";
 	}
+	#endif // QT_NO_WARNING_OUTPUT
 
 	instance = this;
 }
diff -upNr AusweisApp2-1.16.1/src/ui/common/TrayIcon.cpp AusweisApp2-1.16.1.patched/src/ui/common/TrayIcon.cpp
--- AusweisApp2-1.16.1/src/ui/common/TrayIcon.cpp	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/ui/common/TrayIcon.cpp	2019-04-21 12:20:00.483134045 +0200
@@ -70,12 +70,11 @@ void TrayIcon::create()
 
 	const auto trayIconMenu = new QMenu(nullptr);
 
-#if defined(Q_OS_MACOS)
+
 	QAction* showApplicationAction = new QAction(tr("Open"), trayIconMenu);
 	connect(showApplicationAction, &QAction::triggered, this, &TrayIcon::fireShow);
 	trayIconMenu->addAction(showApplicationAction);
 	trayIconMenu->addSeparator();
-#endif
 
 	const auto quitAction = new QAction(tr("Exit AusweisApp2"), trayIconMenu);
 	connect(quitAction, &QAction::triggered, this, &TrayIcon::fireQuit);
diff -upNr AusweisApp2-1.16.1/src/ui/jsonapi/MessageDispatcher.cpp AusweisApp2-1.16.1.patched/src/ui/jsonapi/MessageDispatcher.cpp
--- AusweisApp2-1.16.1/src/ui/jsonapi/MessageDispatcher.cpp	2018-12-21 12:38:52.000000000 +0100
+++ AusweisApp2-1.16.1.patched/src/ui/jsonapi/MessageDispatcher.cpp	2019-04-16 15:40:25.168717354 +0200
@@ -143,7 +143,11 @@ MsgHandler MessageDispatcher::createForC
 	}
 
 	auto requestType = Enum<MsgCmdType>::fromString(cmd, MsgCmdType::UNDEFINED);
-	qDebug(jsonapi) << "Process type:" << requestType;
+	
+	#ifndef QT_NO_DEBUG_OUTPUT
+		qDebug(jsonapi) << "Process type:" << requestType;
+	#endif // QT_NO_DEBUG_OUTPUT
+
 	switch (requestType)
 	{
 		case MsgCmdType::UNDEFINED:
